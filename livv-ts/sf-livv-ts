#!/usr/bin/env bash
#
# Arquivo: sf-livv
# DescriÃ§Ã£o: Scaffolding de um projeto usando o Laravel, Inertia.js, Vue.js 3, Vite.js & TypeScript
#
# Mais um script feito com ðŸ’™ por "Lucas SaliÃ©s Brum" <lucas@archlinux.com.br>
# Demo: https://www.gettr.com/post/pgjgwb394b
#
# Criado em: 23/09/2021 01:33:12
# Atualizado: 20/05/2022 17:50:39
#
# ReferÃªncia de cores:
# FG: reset = 0, black = 30, red = 31, green = 32, yellow = 33, blue = 34, magenta = 35, cyan = 36, white = 37
# BG: reset = 0, black = 40, red = 41, green = 42, yellow = 43, blue = 44, magenta = 45, cyan = 46, white=47

command -v pnpm &>/dev/null || (echo -e "O programa \e[1;31mpnpm\e[0m nÃ£o estÃ¡ instalado, instale-o primeiro." && exit)
command -v composer &>/dev/null || (echo -e "O programa \e[1;31mcomposer\e[0m nÃ£o estÃ¡ instalado, instale-o primeiro." && exit)

[ $1 ] && PROJECT="$1" || PROJECT="livv"
LAUNCH="true"
UPGRADE="true"
TMUX_SESSION="livv"
EDITOR="code"
BROWSER="firefox"
NPM="/usr/bin/pnpm"

version() {
    echo "$(basename $0) v0.1b"
    exit 0
}

help() {
    echo "Uso: $(basename $0) -p nomedoprojeto [-l|-nl] [-u|-nu] -h -v"
    exit 0
}

upgrade() {
    read -p "Deseja atualizar o composer, laravel installer e $NPM? [s/N]: " -t 30 response
    [[ $response =~ ^([yY][sS])$ ]] && return

    echo -e "[\e[1;35m*\e[0m] Upgrading Composer..."
    sudo composer self-update --no-interaction --quiet 2>/dev/null
    echo -e "[\e[1;35m*\e[0m] Upgrading Larave Installer..."
    sudo composer global require laravel/installer --no-interaction --quiet 2>/dev/null
    echo -e "[\e[1;35m*\e[0m] Upgrading $NPM..."
    [ "$NPM" == "npm" ] && sudo npm i -g npm || sudo pnpm add -g pnpm 1>/dev/null 2>/dev/null
}

prune() {
    php artisan cache:clear
    php artisan config:clear
    php artisan route:clear
    php artisan view:clear
}

optimize() {
    php artisan config:cache
    php artisan route:cache
    php artisan view:cache
}

launch() {
    read -p "Deseja lanÃ§ar uma instÃ¢ncia do TMUX com o artisan e $NPM rodando a aplicaÃ§Ã£o? [s/N]: " -t 30 response
    [[ "$response" =~ ^([yY][sS])$ ]] && return

    \tmux has-session -t $TMUX_SESSION 2>/dev/null
    [ $? != 0 ] && \tmux kill-session -t $TMUX_SESSION

    \tmux new-session -d -s $TMUX_SESSION 2>/dev/null

    \tmux new-window -t $TMUX_SESSION -n artisan
    \tmux new-window -t $TMUX_SESSION -n npm

    \tmux send-keys -t $TMUX_SESSION:artisan "php artisan serve" ENTER
    \tmux send-keys -t $TMUX_SESSION:npm "$NPM run dev" ENTER

    \tmux detach -s $TMUX_SESSION

    $BROWSER http://localhost:8000
}

existent() {
    [ ! -f artisan ] && cd $PROJECT

    test -d database || mkdir database
    test -f database/database.sqlite || touch database/database.sqlite
    test -d .vscode || /usr/bin/mkdir .vscode
    test -d .github/workflows || /usr/bin/mkdir -p .github/workflows

    read -p "Deseja instalar o settings.json? [s/N]: " -t 10 response
    if [[ $response =~ ^([yY][sS])$ ]]; then
        echo -e "[\e[1;35m*\e[0m] Instalando o settings.json..."
        test -f .vscode/settings.json ||
            curl -sL -o .vscode/settings.json \
                https://raw.githubusercontent.com/sistematico/sf-scripts/main/livv/stub/.vscode/settings.json
    fi

    echo -e "[\e[1;35m*\e[0m] Instalando o tasks.json..."
    test -f .vscode/tasks.json ||
        curl -sL -o .vscode/tasks.json \
            https://raw.githubusercontent.com/sistematico/sf-scripts/main/livv/stub/.vscode/tasks.json

    echo -e "[\e[1;35m*\e[0m] Instalando o livv.yml..."
    test -f .github/workflows/livv.yml ||
        curl -sL -o .github/workflows/livv.yml \
            https://raw.githubusercontent.com/sistematico/sf-scripts/main/livv/stub/.github/workflows/livv.yml

    echo -e "[\e[1;35m*\e[0m] Instalando o .prettierrc.json..."
    test -f .prettierrc.json ||
        curl -sL -o .prettierrc.json \
            https://raw.githubusercontent.com/sistematico/sf-scripts/main/common/.prettierrc.json

    echo -e "[\e[1;35m*\e[0m] Instalando o .env..."
    test -f .env ||
        curl -sL -o .env \
            https://raw.githubusercontent.com/sistematico/sf-scripts/main/livv/stub/.env

    echo -e "[\e[1;35m*\e[0m] Instalando o .env.example..."
    test -f .env.example ||
        curl -sL -o .env.example \
            https://raw.githubusercontent.com/sistematico/sf-scripts/main/livv/stub/.env.example

    echo -e "[\e[1;35m*\e[0m] Instalando o ansible.sh..."
    test -f ansible.sh ||
        curl -sL -o ansible.sh \
            https://raw.githubusercontent.com/sistematico/sf-scripts/main/common/ansible.sh

    echo -e "[\e[1;35m*\e[0m] Instalando o ansible.yml..."
    test -f ansible.yml ||
        curl -sL -o ansible.yml \
            https://raw.githubusercontent.com/sistematico/sf-scripts/main/common/ansible.yml

    echo -e "[\e[1;35m*\e[0m] Instalando o livv.sh..."
    test -f livv.sh ||
        curl -sL -o sf-livv \
            https://raw.githubusercontent.com/sistematico/sf-scripts/main/livv/sf-livv

    echo -e "[\e[1;35m*\e[0m] Instalando o .gitignore..."
    test -f .gitignore ||
        curl -sL -o .gitignore \
            https://raw.githubusercontent.com/sistematico/sf-scripts/main/livv/.gitignore

    chmod +x ansible.sh sf-livv

    echo -e "[\e[1;35m*\e[0m] Rodando o \e[1;35mcomposer install\e[0m..."
    composer install 1>/dev/null 2>/dev/null

    echo -e "[\e[1;35m*\e[0m] Rodando as tarefas do artisan..."

    php artisan migrate:fresh --seed --force -q
    php artisan key:generate --force -q
    php artisan storage:link --force -q

    echo -e "[\e[1;35m*\e[0m] Rodando o \e[1;35mpnpm install\e[0m..."
    $NPM install 1> /dev/null 2> /dev/null

    while [ ! -z "$1" ]; do
        case $1 in
        -p | --prune) prune ;;
        -o | --optimize) optimize ;;
        esac

        shift
    done
}

nonexistent() {
    composer create-project laravel/laravel "$PROJECT"
    cd "$PROJECT"
    [ "$NPM" == "npm" ] && npx @preset/cli apply laravel:vite || $NPM dlx @preset/cli apply laravel:inertia
    existent
}

while [[ ${1} ]]; do
    case "${1}" in
    -n | --project | -p)
        PROJECT=${2}
        ;;
    --launch | -l)
        LAUNCH="true"
        ;;
    --no-launch | -nl)
        LAUNCH="false"
        ;;
    --upgrade | -u)
        UPGRADE="true"
        ;;
    --no-upgrade | -nu)
        UPGRADE="false"
        ;;
    --help | -h)
        help
        ;;
    --version | -v)
        version
        ;;
    *)
        PROJECT=${1}
        ;;
    esac

    shift
done

[ "$UPGRADE" == "true" ] && upgrade
[ -f $PROJECT/artisan ] && existent || nonexistent
[ "$LAUNCH" == "true" ] && launch
