#!/usr/bin/env bash
#
# Arquivo: sf-laravel-breeze
# DescriÃ§Ã£o: Scaffolding de um projeto usando o Laravel & Vite.js
#
# Mais um script feito com ðŸ’™ por "Lucas SaliÃ©s Brum" <lucas@archlinux.com.br>
# Demo: https://www.gettr.com/post/pgjgwb394b
# 
# Criado em:  23/09/2021 01:33:12
# Atualizado: 05/05/2022 13:49:29
#
# ReferÃªncia de cores:
# FG: reset = 0, black = 30, red = 31, green = 32, yellow = 33, blue = 34, magenta = 35, cyan = 36, white = 37
# BG: reset = 0, black = 40, red = 41, green = 42, yellow = 43, blue = 44, magenta = 45, cyan = 46, white=47

command -v pnpm &> /dev/null || (echo -e "O programa \e[1;31mpnpm\e[0m nÃ£o estÃ¡ instalado, instale-o primeiro." && exit)

PROJECT="laravel-breeze"
SSR="--ssr"
TEAMS="" # --teams
LAUNCH="true"
UPGRADE="true"
TMUX_SESSION="Breeze"
EDITOR="code"
BROWSER="firefox"
URL="https://raw.githubusercontent.com/sistematico/sf-scripts/main/bootstrap"
COMMON="https://raw.githubusercontent.com/sistematico/sf-scripts/main/common"

version() {
    echo "$(basename $0) v0.1b"
    exit 0
}

help() {
    echo "Uso: $(basename $0) -p nomedoprojeto [-l|-nl] [-u|-nu] -h -v"
    exit 0
}

upgrade() {
    echo "[\e[1;35m*\e[0m] Upgrading Composer..."
    sudo composer self-update --no-interaction --quiet 2> /dev/null
    echo "[\e[1;35m*\e[0m] Upgrading Larave Installer..."
    sudo composer global require laravel/installer --no-interaction --quiet 2> /dev/null
    echo "[\e[1;35m*\e[0m] Upgrading pnpm..."
    sudo pnpm add -g pnpm 1> /dev/null 2> /dev/null
}

launch() {
    \tmux has-session -t $TMUX_SESSION 2>/dev/null
    if [ $? != 0 ]; then
        \tmux kill-session -t $TMUX_SESSION
    fi

    \tmux new-session -d -s $TMUX_SESSION 2>/dev/null
    
    \tmux new-window -t $TMUX_SESSION -n artisan 
    \tmux new-window -t $TMUX_SESSION -n npm 

    \tmux send-keys -t $TMUX_SESSION:artisan "php artisan serve" ENTER
    \tmux send-keys -t $TMUX_SESSION:npm "$NPM dev" ENTER

    \tmux detach -s $TMUX_SESSION

    $BROWSER http://localhost:8000
}

build() {
    composer install

    rm -rf node_modules package-lock.json
    
    pnpm install 1> /dev/null 2> /dev/null 
    pnpm dev

    php artisan migrate:fresh --seed --force -q
    php artisan key:generate
    php artisan storage:link
}

setup() {
    [ ! -f ${PROJECT}/artisan ] && laravel new "$PROJECT"

    cd "$PROJECT"

    test -f database/database.sqlite || touch database/database.sqlite
    test -d .vscode || /usr/bin/mkdir .vscode
    test -d .github/workflows || /usr/bin/mkdir -p .github/workflows

    # .gitignore
    test -f .gitignore || \
        curl -sL -o .gitignore \
        $COMMON/gitignore

    # Prettier
    test -f .prettierrc.json || \
        curl -sL -o .prettierrc.json \
        $COMMON/.prettierrc.json

    # VSCode Settings
    test -f .vscode/settings.json || \
        curl -sL -o .vscode/settings.json \
        $COMMON/settings.json

    # Ansible
    test -f ansible.sh || \
        curl -sL -o ansible.sh \
        $COMMON/ansible.sh

    # VSCode Tasks
    test -f .vscode/tasks.json || \
        curl -sL -o .vscode/tasks.json \
        $URL/tasks.json

    test -f ansible.yml || \
        curl -sL -o ansible.yml \
        $URL/ansible.yml

    # Github Workflows
    test -f .github/workflows/jetstream.yml || \
        curl -sL -o .github/workflows/jetstream.yml \
        $URL/jetstream.yml

    # Laravel .env
    test -f .env || \
        curl -sL -o .env \
        $URL/.env

    # Laravel .env.example
    test -f .env.example || \
        curl -sL -o .env.example \
        $URL/.env.example

    # Build Script
    test -f laravel.sh || \
        curl -sL -o laravel.sh \
        $URL/breeze.sh

    chmod +x ansible.sh laravel.sh

    composer require laravel/jetstream
    php artisan jetstream:install inertia $SSR $TEAMS

    build
}

[ "$UPGRADE" == "true" ] && upgrade
setup
[ "$LAUNCH" == "true" ] && launch