#!/usr/bin/env bash
#
# Arquivo: sf-laravel-vite
# DescriÃ§Ã£o: Scaffolding de um projeto usando o Laravel & Vite.js
#
# Mais um script feito com ðŸ’™ por "Lucas SaliÃ©s Brum" <lucas@archlinux.com.br>
# Demo: https://www.gettr.com/post/pgjgwb394b
# 
# Criado em: 23/09/2021 01:33:12
# Atualizado: 26/04/2022 16:42:58
#
# ReferÃªncia de cores:
# FG: reset = 0, black = 30, red = 31, green = 32, yellow = 33, blue = 34, magenta = 35, cyan = 36, white = 37
# BG: reset = 0, black = 40, red = 41, green = 42, yellow = 43, blue = 44, magenta = 45, cyan = 46, white=47

command -v pnpm &> /dev/null || (echo -e "O programa \e[1;31mpnpm\e[0m nÃ£o estÃ¡ instalado, instale-o primeiro." && exit)

PROJECT="laravel"
LAUNCH="false"
UPGRADE="true"
TMUX_SESSION="Vite"
EDITOR="code"
BROWSER="firefox"

[ $1 ] && PROJECT="$1"

version() {
    echo "$(basename $0) v0.1b"
    exit 0
}

help() {
    echo "Uso: $(basename $0) -p nomedoprojeto [-l|-nl] [-u|-nu] -h -v"
    exit 0
}

upgrade() {
    sudo composer self-update --no-interaction --quiet
    sudo composer global require laravel/installer --no-interaction --quiet
    sudo pnpm add -g pnpm
}

launch() {
    \tmux has-session -t $TMUX_SESSION 2>/dev/null
    if [ $? != 0 ]; then
        \tmux kill-session -t $TMUX_SESSION
    fi

    \tmux new-session -d -s $TMUX_SESSION 2>/dev/null
    
    \tmux new-window -t $TMUX_SESSION -n artisan 
    \tmux new-window -t $TMUX_SESSION -n npm 

    \tmux send-keys -t $TMUX_SESSION:artisan "php artisan serve" ENTER
    \tmux send-keys -t $TMUX_SESSION:npm "$NPM dev" ENTER

    \tmux detach -s $TMUX_SESSION

    $BROWSER http://localhost:8000
}

existent() {
    test -f database/database.sqlite || touch database/database.sqlite
    test -d .vscode || /usr/bin/mkdir .vscode
    test -d .github/workflows || /usr/bin/mkdir -p .github/workflows

    test -f .vscode/settings.json || \
        curl -sL -o .vscode/settings.json \
        https://gist.githubusercontent.com/sistematico/ef54c9a520428c7ad1160803aa0eadb1/raw/cb0b5445076fa0ed93bda40a169a14b6294baa36/settings.json

    test -f .vscode/tasks.json || \
        curl -sL -o .vscode/tasks.json \
        https://gist.githubusercontent.com/sistematico/ef54c9a520428c7ad1160803aa0eadb1/raw/1b6fd2029313c1f5a71ac14a2aabd230af06e34c/tasks.json

    test -f .github/workflows/vite.yml || \
        curl -sL -o .github/workflows/vite.yml \
        https://gist.githubusercontent.com/sistematico/96c9dda44e7bcea42210e9477ebffeaf/raw/0c9ebd51b30060a623eddab6573dabff9f62fb16/vite.yml    

    test -f .prettierrc.json || \
        curl -sL -o .prettierrc.json \
        https://gist.githubusercontent.com/sistematico/ef54c9a520428c7ad1160803aa0eadb1/raw/4c2c427d1ac8b3da2334382d8177212dedd971e0/.prettierrc.json

    test -f .env || \
        curl -sL -o .env \
        https://gist.githubusercontent.com/sistematico/ef54c9a520428c7ad1160803aa0eadb1/raw/4c2c427d1ac8b3da2334382d8177212dedd971e0/.env

    test -f .env.example || \
        curl -sL -o .env.example \
        https://gist.githubusercontent.com/sistematico/ef54c9a520428c7ad1160803aa0eadb1/raw/4c2c427d1ac8b3da2334382d8177212dedd971e0/.env.example

    test -f ansible.sh || \
        curl -sL -o ansible.sh \
        https://gist.githubusercontent.com/sistematico/ef54c9a520428c7ad1160803aa0eadb1/raw/4c2c427d1ac8b3da2334382d8177212dedd971e0/ansible.sh

    test -f ansible.yml || \
        curl -sL -o ansible.yml \
        https://gist.githubusercontent.com/sistematico/ef54c9a520428c7ad1160803aa0eadb1/raw/4c2c427d1ac8b3da2334382d8177212dedd971e0/ansible.yml

    test -f build.sh || \
        curl -sL -o build.sh \
        https://gist.githubusercontent.com/sistematico/ef54c9a520428c7ad1160803aa0eadb1/raw/4c2c427d1ac8b3da2334382d8177212dedd971e0/build.sh

    test -f .gitignore || \
        curl -sL -o .gitignore \
        https://gist.githubusercontent.com/sistematico/ef54c9a520428c7ad1160803aa0eadb1/raw/6a0bc6706263167d413d119c36180423c5660bd3/.gitignore

    chmod +x ansible.sh build.sh

    composer install
    php artisan migrate:fresh --seed --force -q
    php artisan key:generate
    php artisan storage:link
    pnpm install 1> /dev/null 2> /dev/null 
    pnpm dev
}

nonexistent() {
    composer create-project laravel/laravel "$PROJECT"
    cd "$PROJECT"
    npx @preset/cli apply laravel:inertia
    rm -rf node_modules package-lock.json 
    existent
}

while [[ ${1} ]]; do
    case "${1}" in
        -n|--project|-p)
            PROJECT=${2}
        ;;
        --launch|-l)
            LAUNCH="true"
        ;;
        --no-launch|-nl)
            LAUNCH="false"
        ;;
        --no-upgrade|-nu)
            UPGRADE="false"
        ;;
        --help|-h)
            help
        ;;
        --version|-v)
            version
        ;;
    esac

    shift
done

[ -f artisan ] && existent || nonexistent

[ "$LAUNCH" == "true" ] && launch